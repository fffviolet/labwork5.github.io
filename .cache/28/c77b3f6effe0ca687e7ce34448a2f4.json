{"id":"node_modules/date-fns/nextSaturday.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./nextDay.js","loc":{"line":1,"column":24},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\nextSaturday.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\nextDay.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.nextSaturday = nextSaturday;\n\nvar _nextDay = require(\"./nextDay.js\");\n\n/**\n * The {@link nextSaturday} function options.\n */\n\n/**\n * @name nextSaturday\n * @category Weekday Helpers\n * @summary When is the next Saturday?\n *\n * @description\n * When is the next Saturday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to start counting from\n * @param options - An object with options\n *\n * @returns The next Saturday\n *\n * @example\n * // When is the next Saturday after Mar, 22, 2020?\n * const result = nextSaturday(new Date(2020, 2, 22))\n * //=> Sat Mar 28 2020 00:00:00\n */\nfunction nextSaturday(date, options) {\n  return (0, _nextDay.nextDay)(date, 6, options);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = nextSaturday;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":7,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":28,"column":7}},{"name":"nextSaturday","generated":{"line":36,"column":9},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":28,"column":16}},{"generated":{"line":36,"column":21},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":28,"column":7}},{"name":"date","generated":{"line":36,"column":22},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":28,"column":29}},{"generated":{"line":36,"column":26},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":28,"column":7}},{"name":"options","generated":{"line":36,"column":28},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":28,"column":35}},{"generated":{"line":36,"column":35},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":28,"column":7}},{"generated":{"line":36,"column":37},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":28,"column":44}},{"generated":{"line":37,"column":0},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":2}},{"generated":{"line":37,"column":9},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":9}},{"name":"date","generated":{"line":37,"column":31},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":17}},{"generated":{"line":37,"column":35},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":9}},{"generated":{"line":37,"column":37},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":23}},{"generated":{"line":37,"column":38},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":9}},{"name":"options","generated":{"line":37,"column":40},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":26}},{"generated":{"line":37,"column":47},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":9}},{"generated":{"line":37,"column":48},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":29,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":30,"column":1}},{"generated":{"line":38,"column":2},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":32,"column":0}},{"name":"nextSaturday","generated":{"line":41,"column":33},"source":"node_modules/date-fns/nextSaturday.js","original":{"line":33,"column":15}}],"sources":{"node_modules/date-fns/nextSaturday.js":"import { nextDay } from \"./nextDay.js\";\n\n/**\n * The {@link nextSaturday} function options.\n */\n\n/**\n * @name nextSaturday\n * @category Weekday Helpers\n * @summary When is the next Saturday?\n *\n * @description\n * When is the next Saturday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to start counting from\n * @param options - An object with options\n *\n * @returns The next Saturday\n *\n * @example\n * // When is the next Saturday after Mar, 22, 2020?\n * const result = nextSaturday(new Date(2020, 2, 22))\n * //=> Sat Mar 28 2020 00:00:00\n */\nexport function nextSaturday(date, options) {\n  return nextDay(date, 6, options);\n}\n\n// Fallback for modularized imports:\nexport default nextSaturday;\n"},"lineCount":null}},"error":null,"hash":"5f433050a62d0e9019ae2bd36a7e17bc","cacheData":{"env":{}}}