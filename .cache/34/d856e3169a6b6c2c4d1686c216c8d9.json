{"id":"node_modules/date-fns/isEqual.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./toDate.js","loc":{"line":1,"column":23},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\isEqual.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\toDate.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.isEqual = isEqual;\n\nvar _toDate = require(\"./toDate.js\");\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * const result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual(leftDate, rightDate) {\n  return +(0, _toDate.toDate)(leftDate) === +(0, _toDate.toDate)(rightDate);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = isEqual;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/isEqual.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/isEqual.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/date-fns/isEqual.js","original":{"line":24,"column":7}},{"name":"isEqual","generated":{"line":32,"column":9},"source":"node_modules/date-fns/isEqual.js","original":{"line":24,"column":16}},{"generated":{"line":32,"column":16},"source":"node_modules/date-fns/isEqual.js","original":{"line":24,"column":7}},{"name":"leftDate","generated":{"line":32,"column":17},"source":"node_modules/date-fns/isEqual.js","original":{"line":24,"column":24}},{"generated":{"line":32,"column":25},"source":"node_modules/date-fns/isEqual.js","original":{"line":24,"column":7}},{"name":"rightDate","generated":{"line":32,"column":27},"source":"node_modules/date-fns/isEqual.js","original":{"line":24,"column":34}},{"generated":{"line":32,"column":36},"source":"node_modules/date-fns/isEqual.js","original":{"line":24,"column":7}},{"generated":{"line":32,"column":38},"source":"node_modules/date-fns/isEqual.js","original":{"line":24,"column":45}},{"generated":{"line":33,"column":0},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":2}},{"generated":{"line":33,"column":9},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":9}},{"generated":{"line":33,"column":10},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":10}},{"name":"leftDate","generated":{"line":33,"column":30},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":17}},{"generated":{"line":33,"column":38},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":10}},{"generated":{"line":33,"column":39},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":9}},{"generated":{"line":33,"column":44},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":31}},{"generated":{"line":33,"column":45},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":32}},{"name":"rightDate","generated":{"line":33,"column":65},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":39}},{"generated":{"line":33,"column":74},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":32}},{"generated":{"line":33,"column":75},"source":"node_modules/date-fns/isEqual.js","original":{"line":25,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/date-fns/isEqual.js","original":{"line":26,"column":1}},{"generated":{"line":34,"column":2},"source":"node_modules/date-fns/isEqual.js","original":{"line":28,"column":0}},{"name":"isEqual","generated":{"line":37,"column":33},"source":"node_modules/date-fns/isEqual.js","original":{"line":29,"column":15}}],"sources":{"node_modules/date-fns/isEqual.js":"import { toDate } from \"./toDate.js\";\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * const result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nexport function isEqual(leftDate, rightDate) {\n  return +toDate(leftDate) === +toDate(rightDate);\n}\n\n// Fallback for modularized imports:\nexport default isEqual;\n"},"lineCount":null}},"error":null,"hash":"2a92115332a5a40f86f09be75aa1028c","cacheData":{"env":{}}}