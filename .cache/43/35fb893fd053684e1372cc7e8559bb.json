{"id":"node_modules/date-fns/isSameISOWeek.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./isSameWeek.js","loc":{"line":1,"column":27},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\isSameISOWeek.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\isSameWeek.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.isSameISOWeek = isSameISOWeek;\n\nvar _isSameWeek = require(\"./isSameWeek.js\");\n\n/**\n * The {@link isSameISOWeek} function options.\n */\n\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week (and year)?\n *\n * @description\n * Are the given dates in the same ISO week (and year)?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same ISO week (and year)\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n *\n * @example\n * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\n * //=> false\n */\nfunction isSameISOWeek(laterDate, earlierDate, options) {\n  return (0, _isSameWeek.isSameWeek)(laterDate, earlierDate, { ...options,\n    weekStartsOn: 1\n  });\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = isSameISOWeek;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":7,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":7}},{"name":"isSameISOWeek","generated":{"line":41,"column":9},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":16}},{"generated":{"line":41,"column":22},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":7}},{"name":"laterDate","generated":{"line":41,"column":23},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":30}},{"generated":{"line":41,"column":32},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":7}},{"name":"earlierDate","generated":{"line":41,"column":34},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":41}},{"generated":{"line":41,"column":45},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":7}},{"name":"options","generated":{"line":41,"column":47},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":54}},{"generated":{"line":41,"column":54},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":7}},{"generated":{"line":41,"column":56},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":33,"column":63}},{"generated":{"line":42,"column":0},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":2}},{"generated":{"line":42,"column":9},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":9}},{"name":"laterDate","generated":{"line":42,"column":37},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":20}},{"generated":{"line":42,"column":46},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":9}},{"name":"earlierDate","generated":{"line":42,"column":48},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":31}},{"generated":{"line":42,"column":59},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":9}},{"generated":{"line":42,"column":61},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":44}},{"generated":{"line":42,"column":63},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":46}},{"name":"options","generated":{"line":42,"column":66},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":49}},{"generated":{"line":42,"column":73},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":44}},{"name":"weekStartsOn","generated":{"line":43,"column":0},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":58}},{"name":"weekStartsOn","generated":{"line":43,"column":4},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":58}},{"generated":{"line":43,"column":16},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":70}},{"generated":{"line":43,"column":18},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":72}},{"generated":{"line":44,"column":0},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":44}},{"generated":{"line":44,"column":3},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":9}},{"generated":{"line":44,"column":4},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":34,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":35,"column":1}},{"generated":{"line":45,"column":2},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":37,"column":0}},{"name":"isSameISOWeek","generated":{"line":48,"column":33},"source":"node_modules/date-fns/isSameISOWeek.js","original":{"line":38,"column":15}}],"sources":{"node_modules/date-fns/isSameISOWeek.js":"import { isSameWeek } from \"./isSameWeek.js\";\n\n/**\n * The {@link isSameISOWeek} function options.\n */\n\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week (and year)?\n *\n * @description\n * Are the given dates in the same ISO week (and year)?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same ISO week (and year)\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n *\n * @example\n * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\n * //=> false\n */\nexport function isSameISOWeek(laterDate, earlierDate, options) {\n  return isSameWeek(laterDate, earlierDate, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default isSameISOWeek;\n"},"lineCount":null}},"error":null,"hash":"665d067025b3d429a43eb46168602437","cacheData":{"env":{}}}