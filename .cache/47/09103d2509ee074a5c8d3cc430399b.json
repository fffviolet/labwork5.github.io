{"id":"node_modules/date-fns/lightFormat.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./_lib/format/lightFormatters.js","loc":{"line":1,"column":32},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\lightFormat.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\_lib\\format\\lightFormatters.js"},{"name":"./isValid.js","loc":{"line":2,"column":24},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\lightFormat.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\isValid.js"},{"name":"./toDate.js","loc":{"line":3,"column":23},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\lightFormat.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\toDate.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.lightFormat = lightFormat;\nObject.defineProperty(exports, \"lightFormatters\", {\n  enumerable: true,\n  get: function () {\n    return _lightFormatters.lightFormatters;\n  }\n});\n\nvar _lightFormatters = require(\"./_lib/format/lightFormatters.js\");\n\nvar _isValid = require(\"./isValid.js\");\n\nvar _toDate = require(\"./toDate.js\");\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\n// This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @private\n */\n\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 001, ..., 999                |\n * |                                 | SSSS    | ...                               |\n *\n * @param date - The original date\n * @param format - The string of tokens\n *\n * @returns The formatted date string\n *\n * @throws `Invalid time value` if the date is invalid\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * const result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '2014-02-11'\n */\n\nfunction lightFormat(date, formatStr) {\n  const date_ = (0, _toDate.toDate)(date);\n\n  if (!(0, _isValid.isValid)(date_)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const tokens = formatStr.match(formattingTokensRegExp); // The only case when formattingTokensRegExp doesn't match the string is when it's empty\n\n  if (!tokens) return \"\";\n  const result = tokens.map(substring => {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    const firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    const formatter = _lightFormatters.lightFormatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(date_, substring);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError(\"Format string contains an unescaped latin alphabet character `\" + firstCharacter + \"`\");\n    }\n\n    return substring;\n  }).join(\"\");\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  const matches = input.match(escapedStringRegExp);\n  if (!matches) return input;\n  return matches[1].replace(doubleQuoteRegExp, \"'\");\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = lightFormat;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":15,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":1,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":2,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":5,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":6,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":9,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":10,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":11,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":12,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":13,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":14,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":15,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":16,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":17,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":18,"column":0}},{"name":"formattingTokensRegExp","generated":{"line":32,"column":6},"source":"node_modules/date-fns/lightFormat.js","original":{"line":18,"column":6}},{"generated":{"line":32,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":18,"column":28}},{"generated":{"line":32,"column":31},"source":"node_modules/date-fns/lightFormat.js","original":{"line":18,"column":31}},{"generated":{"line":32,"column":63},"source":"node_modules/date-fns/lightFormat.js","original":{"line":18,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":20,"column":0}},{"name":"escapedStringRegExp","generated":{"line":33,"column":6},"source":"node_modules/date-fns/lightFormat.js","original":{"line":20,"column":6}},{"generated":{"line":33,"column":25},"source":"node_modules/date-fns/lightFormat.js","original":{"line":20,"column":25}},{"generated":{"line":33,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":20,"column":28}},{"generated":{"line":33,"column":42},"source":"node_modules/date-fns/lightFormat.js","original":{"line":20,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":21,"column":0}},{"name":"doubleQuoteRegExp","generated":{"line":34,"column":6},"source":"node_modules/date-fns/lightFormat.js","original":{"line":21,"column":6}},{"generated":{"line":34,"column":23},"source":"node_modules/date-fns/lightFormat.js","original":{"line":21,"column":23}},{"generated":{"line":34,"column":26},"source":"node_modules/date-fns/lightFormat.js","original":{"line":21,"column":26}},{"generated":{"line":34,"column":31},"source":"node_modules/date-fns/lightFormat.js","original":{"line":21,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":22,"column":0}},{"name":"unescapedLatinCharacterRegExp","generated":{"line":35,"column":6},"source":"node_modules/date-fns/lightFormat.js","original":{"line":22,"column":6}},{"generated":{"line":35,"column":35},"source":"node_modules/date-fns/lightFormat.js","original":{"line":22,"column":35}},{"generated":{"line":35,"column":38},"source":"node_modules/date-fns/lightFormat.js","original":{"line":22,"column":38}},{"generated":{"line":35,"column":48},"source":"node_modules/date-fns/lightFormat.js","original":{"line":22,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":24,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":28,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":7}},{"name":"lightFormat","generated":{"line":98,"column":9},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":16}},{"generated":{"line":98,"column":20},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":7}},{"name":"date","generated":{"line":98,"column":21},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":28}},{"generated":{"line":98,"column":25},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":7}},{"name":"formatStr","generated":{"line":98,"column":27},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":34}},{"generated":{"line":98,"column":36},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":7}},{"generated":{"line":98,"column":38},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":45}},{"generated":{"line":99,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":86,"column":2}},{"name":"date_","generated":{"line":99,"column":8},"source":"node_modules/date-fns/lightFormat.js","original":{"line":86,"column":8}},{"generated":{"line":99,"column":13},"source":"node_modules/date-fns/lightFormat.js","original":{"line":86,"column":13}},{"generated":{"line":99,"column":16},"source":"node_modules/date-fns/lightFormat.js","original":{"line":86,"column":16}},{"name":"date","generated":{"line":99,"column":36},"source":"node_modules/date-fns/lightFormat.js","original":{"line":86,"column":23}},{"generated":{"line":99,"column":40},"source":"node_modules/date-fns/lightFormat.js","original":{"line":86,"column":16}},{"generated":{"line":99,"column":41},"source":"node_modules/date-fns/lightFormat.js","original":{"line":86,"column":2}},{"generated":{"line":101,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":88,"column":2}},{"generated":{"line":101,"column":6},"source":"node_modules/date-fns/lightFormat.js","original":{"line":88,"column":6}},{"generated":{"line":101,"column":7},"source":"node_modules/date-fns/lightFormat.js","original":{"line":88,"column":7}},{"name":"date_","generated":{"line":101,"column":29},"source":"node_modules/date-fns/lightFormat.js","original":{"line":88,"column":15}},{"generated":{"line":101,"column":34},"source":"node_modules/date-fns/lightFormat.js","original":{"line":88,"column":7}},{"generated":{"line":101,"column":35},"source":"node_modules/date-fns/lightFormat.js","original":{"line":88,"column":2}},{"generated":{"line":101,"column":37},"source":"node_modules/date-fns/lightFormat.js","original":{"line":88,"column":23}},{"generated":{"line":102,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":89,"column":4}},{"generated":{"line":102,"column":10},"source":"node_modules/date-fns/lightFormat.js","original":{"line":89,"column":10}},{"name":"RangeError","generated":{"line":102,"column":14},"source":"node_modules/date-fns/lightFormat.js","original":{"line":89,"column":14}},{"generated":{"line":102,"column":24},"source":"node_modules/date-fns/lightFormat.js","original":{"line":89,"column":10}},{"generated":{"line":102,"column":25},"source":"node_modules/date-fns/lightFormat.js","original":{"line":89,"column":25}},{"generated":{"line":102,"column":45},"source":"node_modules/date-fns/lightFormat.js","original":{"line":89,"column":10}},{"generated":{"line":102,"column":46},"source":"node_modules/date-fns/lightFormat.js","original":{"line":89,"column":4}},{"generated":{"line":103,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":90,"column":3}},{"generated":{"line":105,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":2}},{"name":"tokens","generated":{"line":105,"column":8},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":8}},{"generated":{"line":105,"column":14},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":14}},{"name":"formatStr","generated":{"line":105,"column":17},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":17}},{"generated":{"line":105,"column":26},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":26}},{"name":"match","generated":{"line":105,"column":27},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":27}},{"generated":{"line":105,"column":32},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":17}},{"name":"formattingTokensRegExp","generated":{"line":105,"column":33},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":33}},{"generated":{"line":105,"column":55},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":17}},{"generated":{"line":105,"column":56},"source":"node_modules/date-fns/lightFormat.js","original":{"line":92,"column":2}},{"generated":{"line":105,"column":57},"source":"node_modules/date-fns/lightFormat.js","original":{"line":85,"column":45}},{"generated":{"line":105,"column":58},"source":"node_modules/date-fns/lightFormat.js","original":{"line":94,"column":2}},{"generated":{"line":107,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":95,"column":2}},{"generated":{"line":107,"column":6},"source":"node_modules/date-fns/lightFormat.js","original":{"line":95,"column":6}},{"name":"tokens","generated":{"line":107,"column":7},"source":"node_modules/date-fns/lightFormat.js","original":{"line":95,"column":7}},{"generated":{"line":107,"column":13},"source":"node_modules/date-fns/lightFormat.js","original":{"line":95,"column":2}},{"generated":{"line":107,"column":15},"source":"node_modules/date-fns/lightFormat.js","original":{"line":95,"column":15}},{"generated":{"line":107,"column":22},"source":"node_modules/date-fns/lightFormat.js","original":{"line":95,"column":22}},{"generated":{"line":107,"column":24},"source":"node_modules/date-fns/lightFormat.js","original":{"line":95,"column":15}},{"generated":{"line":108,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":2}},{"name":"result","generated":{"line":108,"column":8},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":8}},{"generated":{"line":108,"column":14},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":14}},{"name":"tokens","generated":{"line":108,"column":17},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":17}},{"generated":{"line":108,"column":23},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":23}},{"name":"map","generated":{"line":108,"column":24},"source":"node_modules/date-fns/lightFormat.js","original":{"line":98,"column":5}},{"generated":{"line":108,"column":27},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":17}},{"name":"substring","generated":{"line":108,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":98,"column":10}},{"generated":{"line":108,"column":37},"source":"node_modules/date-fns/lightFormat.js","original":{"line":98,"column":9}},{"generated":{"line":108,"column":41},"source":"node_modules/date-fns/lightFormat.js","original":{"line":98,"column":24}},{"generated":{"line":109,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":99,"column":6}},{"generated":{"line":110,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":100,"column":6}},{"name":"substring","generated":{"line":110,"column":8},"source":"node_modules/date-fns/lightFormat.js","original":{"line":100,"column":10}},{"generated":{"line":110,"column":17},"source":"node_modules/date-fns/lightFormat.js","original":{"line":100,"column":19}},{"generated":{"line":110,"column":22},"source":"node_modules/date-fns/lightFormat.js","original":{"line":100,"column":24}},{"generated":{"line":110,"column":26},"source":"node_modules/date-fns/lightFormat.js","original":{"line":100,"column":6}},{"generated":{"line":110,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":100,"column":30}},{"generated":{"line":111,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":101,"column":8}},{"generated":{"line":111,"column":13},"source":"node_modules/date-fns/lightFormat.js","original":{"line":101,"column":15}},{"generated":{"line":111,"column":16},"source":"node_modules/date-fns/lightFormat.js","original":{"line":101,"column":8}},{"generated":{"line":112,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":102,"column":7}},{"generated":{"line":114,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":104,"column":6}},{"name":"firstCharacter","generated":{"line":114,"column":10},"source":"node_modules/date-fns/lightFormat.js","original":{"line":104,"column":12}},{"generated":{"line":114,"column":24},"source":"node_modules/date-fns/lightFormat.js","original":{"line":104,"column":26}},{"name":"substring","generated":{"line":114,"column":27},"source":"node_modules/date-fns/lightFormat.js","original":{"line":104,"column":29}},{"generated":{"line":114,"column":36},"source":"node_modules/date-fns/lightFormat.js","original":{"line":104,"column":38}},{"generated":{"line":114,"column":37},"source":"node_modules/date-fns/lightFormat.js","original":{"line":104,"column":39}},{"generated":{"line":114,"column":38},"source":"node_modules/date-fns/lightFormat.js","original":{"line":104,"column":38}},{"generated":{"line":114,"column":39},"source":"node_modules/date-fns/lightFormat.js","original":{"line":104,"column":6}},{"generated":{"line":116,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":105,"column":6}},{"name":"firstCharacter","generated":{"line":116,"column":8},"source":"node_modules/date-fns/lightFormat.js","original":{"line":105,"column":10}},{"generated":{"line":116,"column":22},"source":"node_modules/date-fns/lightFormat.js","original":{"line":105,"column":24}},{"generated":{"line":116,"column":27},"source":"node_modules/date-fns/lightFormat.js","original":{"line":105,"column":29}},{"generated":{"line":116,"column":30},"source":"node_modules/date-fns/lightFormat.js","original":{"line":105,"column":6}},{"generated":{"line":116,"column":32},"source":"node_modules/date-fns/lightFormat.js","original":{"line":105,"column":34}},{"generated":{"line":117,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":106,"column":8}},{"name":"cleanEscapedString","generated":{"line":117,"column":13},"source":"node_modules/date-fns/lightFormat.js","original":{"line":106,"column":15}},{"generated":{"line":117,"column":31},"source":"node_modules/date-fns/lightFormat.js","original":{"line":106,"column":33}},{"name":"substring","generated":{"line":117,"column":32},"source":"node_modules/date-fns/lightFormat.js","original":{"line":106,"column":34}},{"generated":{"line":117,"column":41},"source":"node_modules/date-fns/lightFormat.js","original":{"line":106,"column":33}},{"generated":{"line":117,"column":42},"source":"node_modules/date-fns/lightFormat.js","original":{"line":106,"column":8}},{"generated":{"line":118,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":107,"column":7}},{"generated":{"line":120,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":109,"column":6}},{"name":"formatter","generated":{"line":120,"column":10},"source":"node_modules/date-fns/lightFormat.js","original":{"line":109,"column":12}},{"generated":{"line":120,"column":19},"source":"node_modules/date-fns/lightFormat.js","original":{"line":109,"column":21}},{"name":"lightFormatters","generated":{"line":120,"column":22},"source":"node_modules/date-fns/lightFormat.js","original":{"line":109,"column":24}},{"name":"firstCharacter","generated":{"line":120,"column":55},"source":"node_modules/date-fns/lightFormat.js","original":{"line":109,"column":40}},{"generated":{"line":120,"column":69},"source":"node_modules/date-fns/lightFormat.js","original":{"line":109,"column":24}},{"generated":{"line":120,"column":70},"source":"node_modules/date-fns/lightFormat.js","original":{"line":109,"column":6}},{"generated":{"line":122,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":110,"column":6}},{"name":"formatter","generated":{"line":122,"column":8},"source":"node_modules/date-fns/lightFormat.js","original":{"line":110,"column":10}},{"generated":{"line":122,"column":17},"source":"node_modules/date-fns/lightFormat.js","original":{"line":110,"column":6}},{"generated":{"line":122,"column":19},"source":"node_modules/date-fns/lightFormat.js","original":{"line":110,"column":21}},{"generated":{"line":123,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":111,"column":8}},{"name":"formatter","generated":{"line":123,"column":13},"source":"node_modules/date-fns/lightFormat.js","original":{"line":111,"column":15}},{"generated":{"line":123,"column":22},"source":"node_modules/date-fns/lightFormat.js","original":{"line":111,"column":24}},{"name":"date_","generated":{"line":123,"column":23},"source":"node_modules/date-fns/lightFormat.js","original":{"line":111,"column":25}},{"generated":{"line":123,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":111,"column":24}},{"name":"substring","generated":{"line":123,"column":30},"source":"node_modules/date-fns/lightFormat.js","original":{"line":111,"column":32}},{"generated":{"line":123,"column":39},"source":"node_modules/date-fns/lightFormat.js","original":{"line":111,"column":24}},{"generated":{"line":123,"column":40},"source":"node_modules/date-fns/lightFormat.js","original":{"line":111,"column":8}},{"generated":{"line":124,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":112,"column":7}},{"generated":{"line":126,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":6}},{"name":"firstCharacter","generated":{"line":126,"column":8},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":10}},{"generated":{"line":126,"column":22},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":24}},{"name":"match","generated":{"line":126,"column":23},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":25}},{"generated":{"line":126,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":10}},{"name":"unescapedLatinCharacterRegExp","generated":{"line":126,"column":29},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":31}},{"generated":{"line":126,"column":58},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":10}},{"generated":{"line":126,"column":59},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":6}},{"generated":{"line":126,"column":61},"source":"node_modules/date-fns/lightFormat.js","original":{"line":114,"column":63}},{"generated":{"line":127,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":115,"column":8}},{"generated":{"line":127,"column":12},"source":"node_modules/date-fns/lightFormat.js","original":{"line":115,"column":14}},{"name":"RangeError","generated":{"line":127,"column":16},"source":"node_modules/date-fns/lightFormat.js","original":{"line":115,"column":18}},{"generated":{"line":127,"column":26},"source":"node_modules/date-fns/lightFormat.js","original":{"line":115,"column":14}},{"generated":{"line":127,"column":27},"source":"node_modules/date-fns/lightFormat.js","original":{"line":116,"column":10}},{"name":"firstCharacter","generated":{"line":127,"column":94},"source":"node_modules/date-fns/lightFormat.js","original":{"line":117,"column":12}},{"generated":{"line":127,"column":108},"source":"node_modules/date-fns/lightFormat.js","original":{"line":116,"column":10}},{"generated":{"line":127,"column":111},"source":"node_modules/date-fns/lightFormat.js","original":{"line":118,"column":12}},{"generated":{"line":127,"column":114},"source":"node_modules/date-fns/lightFormat.js","original":{"line":115,"column":14}},{"generated":{"line":127,"column":115},"source":"node_modules/date-fns/lightFormat.js","original":{"line":115,"column":8}},{"generated":{"line":128,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":120,"column":7}},{"generated":{"line":130,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":122,"column":6}},{"name":"substring","generated":{"line":130,"column":11},"source":"node_modules/date-fns/lightFormat.js","original":{"line":122,"column":13}},{"generated":{"line":130,"column":20},"source":"node_modules/date-fns/lightFormat.js","original":{"line":122,"column":6}},{"generated":{"line":131,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":123,"column":5}},{"generated":{"line":131,"column":3},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":17}},{"name":"join","generated":{"line":131,"column":5},"source":"node_modules/date-fns/lightFormat.js","original":{"line":124,"column":5}},{"generated":{"line":131,"column":9},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":17}},{"generated":{"line":131,"column":10},"source":"node_modules/date-fns/lightFormat.js","original":{"line":124,"column":10}},{"generated":{"line":131,"column":12},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":17}},{"generated":{"line":131,"column":13},"source":"node_modules/date-fns/lightFormat.js","original":{"line":97,"column":2}},{"generated":{"line":132,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":126,"column":2}},{"name":"result","generated":{"line":132,"column":9},"source":"node_modules/date-fns/lightFormat.js","original":{"line":126,"column":9}},{"generated":{"line":132,"column":15},"source":"node_modules/date-fns/lightFormat.js","original":{"line":126,"column":2}},{"generated":{"line":133,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":127,"column":1}},{"generated":{"line":135,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":129,"column":0}},{"name":"cleanEscapedString","generated":{"line":135,"column":9},"source":"node_modules/date-fns/lightFormat.js","original":{"line":129,"column":9}},{"generated":{"line":135,"column":27},"source":"node_modules/date-fns/lightFormat.js","original":{"line":129,"column":0}},{"name":"input","generated":{"line":135,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":129,"column":28}},{"generated":{"line":135,"column":33},"source":"node_modules/date-fns/lightFormat.js","original":{"line":129,"column":0}},{"generated":{"line":135,"column":35},"source":"node_modules/date-fns/lightFormat.js","original":{"line":129,"column":35}},{"generated":{"line":136,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":2}},{"name":"matches","generated":{"line":136,"column":8},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":8}},{"generated":{"line":136,"column":15},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":15}},{"name":"input","generated":{"line":136,"column":18},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":18}},{"generated":{"line":136,"column":23},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":23}},{"name":"match","generated":{"line":136,"column":24},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":24}},{"generated":{"line":136,"column":29},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":18}},{"name":"escapedStringRegExp","generated":{"line":136,"column":30},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":30}},{"generated":{"line":136,"column":49},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":18}},{"generated":{"line":136,"column":50},"source":"node_modules/date-fns/lightFormat.js","original":{"line":130,"column":2}},{"generated":{"line":137,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":131,"column":2}},{"generated":{"line":137,"column":6},"source":"node_modules/date-fns/lightFormat.js","original":{"line":131,"column":6}},{"name":"matches","generated":{"line":137,"column":7},"source":"node_modules/date-fns/lightFormat.js","original":{"line":131,"column":7}},{"generated":{"line":137,"column":14},"source":"node_modules/date-fns/lightFormat.js","original":{"line":131,"column":2}},{"generated":{"line":137,"column":16},"source":"node_modules/date-fns/lightFormat.js","original":{"line":131,"column":16}},{"name":"input","generated":{"line":137,"column":23},"source":"node_modules/date-fns/lightFormat.js","original":{"line":131,"column":23}},{"generated":{"line":137,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":131,"column":16}},{"generated":{"line":138,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":2}},{"name":"matches","generated":{"line":138,"column":9},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":9}},{"generated":{"line":138,"column":16},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":16}},{"generated":{"line":138,"column":17},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":17}},{"generated":{"line":138,"column":18},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":16}},{"generated":{"line":138,"column":19},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":9}},{"name":"replace","generated":{"line":138,"column":20},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":20}},{"generated":{"line":138,"column":27},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":9}},{"name":"doubleQuoteRegExp","generated":{"line":138,"column":28},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":28}},{"generated":{"line":138,"column":45},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":9}},{"generated":{"line":138,"column":47},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":47}},{"generated":{"line":138,"column":50},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":9}},{"generated":{"line":138,"column":51},"source":"node_modules/date-fns/lightFormat.js","original":{"line":132,"column":2}},{"generated":{"line":139,"column":0},"source":"node_modules/date-fns/lightFormat.js","original":{"line":133,"column":1}},{"generated":{"line":139,"column":2},"source":"node_modules/date-fns/lightFormat.js","original":{"line":135,"column":0}},{"name":"lightFormat","generated":{"line":142,"column":33},"source":"node_modules/date-fns/lightFormat.js","original":{"line":136,"column":15}}],"sources":{"node_modules/date-fns/lightFormat.js":"import { lightFormatters } from \"./_lib/format/lightFormatters.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { lightFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @private\n */\n\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 001, ..., 999                |\n * |                                 | SSSS    | ...                               |\n *\n * @param date - The original date\n * @param format - The string of tokens\n *\n * @returns The formatted date string\n *\n * @throws `Invalid time value` if the date is invalid\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * const result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '2014-02-11'\n */\nexport function lightFormat(date, formatStr) {\n  const date_ = toDate(date);\n\n  if (!isValid(date_)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const tokens = formatStr.match(formattingTokensRegExp);\n\n  // The only case when formattingTokensRegExp doesn't match the string is when it's empty\n  if (!tokens) return \"\";\n\n  const result = tokens\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return \"'\";\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring);\n      }\n\n      const formatter = lightFormatters[firstCharacter];\n      if (formatter) {\n        return formatter(date_, substring);\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return substring;\n    })\n    .join(\"\");\n\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  const matches = input.match(escapedStringRegExp);\n  if (!matches) return input;\n  return matches[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default lightFormat;\n"},"lineCount":null}},"error":null,"hash":"d5d8fd3d0a408c57918d820ac39e816c","cacheData":{"env":{}}}