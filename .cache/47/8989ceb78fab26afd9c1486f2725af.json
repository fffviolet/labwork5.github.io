{"id":"node_modules/date-fns/isFuture.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./toDate.js","loc":{"line":1,"column":23},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\isFuture.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\toDate.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.isFuture = isFuture;\n\nvar _toDate = require(\"./toDate.js\");\n\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * @param date - The date to check\n *\n * @returns The date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * const result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nfunction isFuture(date) {\n  return +(0, _toDate.toDate)(date) > Date.now();\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = isFuture;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/isFuture.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/isFuture.js","original":{"line":3,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/date-fns/isFuture.js","original":{"line":21,"column":7}},{"name":"isFuture","generated":{"line":29,"column":9},"source":"node_modules/date-fns/isFuture.js","original":{"line":21,"column":16}},{"generated":{"line":29,"column":17},"source":"node_modules/date-fns/isFuture.js","original":{"line":21,"column":7}},{"name":"date","generated":{"line":29,"column":18},"source":"node_modules/date-fns/isFuture.js","original":{"line":21,"column":25}},{"generated":{"line":29,"column":22},"source":"node_modules/date-fns/isFuture.js","original":{"line":21,"column":7}},{"generated":{"line":29,"column":24},"source":"node_modules/date-fns/isFuture.js","original":{"line":21,"column":31}},{"generated":{"line":30,"column":0},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":2}},{"generated":{"line":30,"column":9},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":9}},{"generated":{"line":30,"column":10},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":10}},{"name":"date","generated":{"line":30,"column":30},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":17}},{"generated":{"line":30,"column":34},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":10}},{"generated":{"line":30,"column":35},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":9}},{"name":"Date","generated":{"line":30,"column":38},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":25}},{"generated":{"line":30,"column":42},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":29}},{"name":"now","generated":{"line":30,"column":43},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":30}},{"generated":{"line":30,"column":46},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":25}},{"generated":{"line":30,"column":48},"source":"node_modules/date-fns/isFuture.js","original":{"line":22,"column":2}},{"generated":{"line":31,"column":0},"source":"node_modules/date-fns/isFuture.js","original":{"line":23,"column":1}},{"generated":{"line":31,"column":2},"source":"node_modules/date-fns/isFuture.js","original":{"line":25,"column":0}},{"name":"isFuture","generated":{"line":34,"column":33},"source":"node_modules/date-fns/isFuture.js","original":{"line":26,"column":15}}],"sources":{"node_modules/date-fns/isFuture.js":"import { toDate } from \"./toDate.js\";\n\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * @param date - The date to check\n *\n * @returns The date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * const result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nexport function isFuture(date) {\n  return +toDate(date) > Date.now();\n}\n\n// Fallback for modularized imports:\nexport default isFuture;\n"},"lineCount":null}},"error":null,"hash":"423dd62bddba46cc8d01101a74843516","cacheData":{"env":{}}}