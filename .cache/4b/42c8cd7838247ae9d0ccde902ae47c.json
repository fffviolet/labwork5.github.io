{"id":"node_modules/date-fns/formatDistanceToNow.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./constructNow.js","loc":{"line":1,"column":29},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\formatDistanceToNow.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\constructNow.js"},{"name":"./formatDistance.js","loc":{"line":3,"column":31},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\formatDistanceToNow.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\formatDistance.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.formatDistanceToNow = formatDistanceToNow;\n\nvar _constructNow = require(\"./constructNow.js\");\n\nvar _formatDistance = require(\"./formatDistance.js\");\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction formatDistanceToNow(date, options) {\n  return (0, _formatDistance.formatDistance)(date, (0, _constructNow.constructNow)(date), options);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = formatDistanceToNow;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":9,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":90,"column":7}},{"name":"formatDistanceToNow","generated":{"line":98,"column":9},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":90,"column":16}},{"generated":{"line":98,"column":28},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":90,"column":7}},{"name":"date","generated":{"line":98,"column":29},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":90,"column":36}},{"generated":{"line":98,"column":33},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":90,"column":7}},{"name":"options","generated":{"line":98,"column":35},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":90,"column":42}},{"generated":{"line":98,"column":42},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":90,"column":7}},{"generated":{"line":98,"column":44},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":90,"column":51}},{"generated":{"line":99,"column":0},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":2}},{"generated":{"line":99,"column":9},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":9}},{"name":"date","generated":{"line":99,"column":45},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":24}},{"generated":{"line":99,"column":49},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":9}},{"generated":{"line":99,"column":51},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":30}},{"name":"date","generated":{"line":99,"column":83},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":43}},{"generated":{"line":99,"column":87},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":30}},{"generated":{"line":99,"column":88},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":9}},{"name":"options","generated":{"line":99,"column":90},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":50}},{"generated":{"line":99,"column":97},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":9}},{"generated":{"line":99,"column":98},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":91,"column":2}},{"generated":{"line":100,"column":0},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":92,"column":1}},{"generated":{"line":100,"column":2},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":94,"column":0}},{"name":"formatDistanceToNow","generated":{"line":103,"column":33},"source":"node_modules/date-fns/formatDistanceToNow.js","original":{"line":95,"column":15}}],"sources":{"node_modules/date-fns/formatDistanceToNow.js":"import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n"},"lineCount":null}},"error":null,"hash":"e0b40231a5a229c6c444b9946aa228fa","cacheData":{"env":{}}}