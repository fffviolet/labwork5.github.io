{"id":"node_modules/date-fns/endOfToday.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./endOfDay.js","loc":{"line":1,"column":25},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\endOfToday.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\endOfDay.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.endOfToday = endOfToday;\n\nvar _endOfDay = require(\"./endOfDay.js\");\n\n/**\n * The {@link endOfToday} function options.\n */\n\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param options - The options\n *\n * @returns The end of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nfunction endOfToday(options) {\n  return (0, _endOfDay.endOfDay)(Date.now(), options);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = endOfToday;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/endOfToday.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/endOfToday.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/date-fns/endOfToday.js","original":{"line":7,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/date-fns/endOfToday.js","original":{"line":28,"column":7}},{"name":"endOfToday","generated":{"line":36,"column":9},"source":"node_modules/date-fns/endOfToday.js","original":{"line":28,"column":16}},{"generated":{"line":36,"column":19},"source":"node_modules/date-fns/endOfToday.js","original":{"line":28,"column":7}},{"name":"options","generated":{"line":36,"column":20},"source":"node_modules/date-fns/endOfToday.js","original":{"line":28,"column":27}},{"generated":{"line":36,"column":27},"source":"node_modules/date-fns/endOfToday.js","original":{"line":28,"column":7}},{"generated":{"line":36,"column":29},"source":"node_modules/date-fns/endOfToday.js","original":{"line":28,"column":36}},{"generated":{"line":37,"column":0},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":2}},{"generated":{"line":37,"column":9},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":9}},{"name":"Date","generated":{"line":37,"column":33},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":18}},{"generated":{"line":37,"column":37},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":22}},{"name":"now","generated":{"line":37,"column":38},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":23}},{"generated":{"line":37,"column":41},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":18}},{"generated":{"line":37,"column":43},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":9}},{"name":"options","generated":{"line":37,"column":45},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":30}},{"generated":{"line":37,"column":52},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":9}},{"generated":{"line":37,"column":53},"source":"node_modules/date-fns/endOfToday.js","original":{"line":29,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/date-fns/endOfToday.js","original":{"line":30,"column":1}},{"generated":{"line":38,"column":2},"source":"node_modules/date-fns/endOfToday.js","original":{"line":32,"column":0}},{"name":"endOfToday","generated":{"line":41,"column":33},"source":"node_modules/date-fns/endOfToday.js","original":{"line":33,"column":15}}],"sources":{"node_modules/date-fns/endOfToday.js":"import { endOfDay } from \"./endOfDay.js\";\n\n/**\n * The {@link endOfToday} function options.\n */\n\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param options - The options\n *\n * @returns The end of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nexport function endOfToday(options) {\n  return endOfDay(Date.now(), options);\n}\n\n// Fallback for modularized imports:\nexport default endOfToday;\n"},"lineCount":null}},"error":null,"hash":"a7e2af2707ee83853ba41f1fe9446b15","cacheData":{"env":{}}}