{"id":"node_modules/date-fns/eachWeekendOfYear.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./eachWeekendOfInterval.js","loc":{"line":1,"column":38},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\eachWeekendOfYear.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\eachWeekendOfInterval.js"},{"name":"./endOfYear.js","loc":{"line":2,"column":26},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\eachWeekendOfYear.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\endOfYear.js"},{"name":"./startOfYear.js","loc":{"line":3,"column":28},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\eachWeekendOfYear.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\startOfYear.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.eachWeekendOfYear = eachWeekendOfYear;\n\nvar _eachWeekendOfInterval = require(\"./eachWeekendOfInterval.js\");\n\nvar _endOfYear = require(\"./endOfYear.js\");\n\nvar _startOfYear = require(\"./startOfYear.js\");\n\n/**\n * The {@link eachWeekendOfYear} function options.\n */\n\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The given year\n * @param options - An object with options\n *\n * @returns An array containing all the Saturdays and Sundays\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * const result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\nfunction eachWeekendOfYear(date, options) {\n  const start = (0, _startOfYear.startOfYear)(date, options);\n  const end = (0, _endOfYear.endOfYear)(date, options);\n  return (0, _eachWeekendOfInterval.eachWeekendOfInterval)({\n    start,\n    end\n  }, options);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = eachWeekendOfYear;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":5,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":9,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":36,"column":7}},{"name":"eachWeekendOfYear","generated":{"line":46,"column":9},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":36,"column":16}},{"generated":{"line":46,"column":26},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":36,"column":7}},{"name":"date","generated":{"line":46,"column":27},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":36,"column":34}},{"generated":{"line":46,"column":31},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":36,"column":7}},{"name":"options","generated":{"line":46,"column":33},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":36,"column":40}},{"generated":{"line":46,"column":40},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":36,"column":7}},{"generated":{"line":46,"column":42},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":36,"column":49}},{"generated":{"line":47,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":2}},{"name":"start","generated":{"line":47,"column":8},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":8}},{"generated":{"line":47,"column":13},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":13}},{"generated":{"line":47,"column":16},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":16}},{"name":"date","generated":{"line":47,"column":46},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":28}},{"generated":{"line":47,"column":50},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":16}},{"name":"options","generated":{"line":47,"column":52},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":34}},{"generated":{"line":47,"column":59},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":16}},{"generated":{"line":47,"column":60},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":37,"column":2}},{"generated":{"line":48,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":2}},{"name":"end","generated":{"line":48,"column":8},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":8}},{"generated":{"line":48,"column":11},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":11}},{"generated":{"line":48,"column":14},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":14}},{"name":"date","generated":{"line":48,"column":40},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":24}},{"generated":{"line":48,"column":44},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":14}},{"name":"options","generated":{"line":48,"column":46},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":30}},{"generated":{"line":48,"column":53},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":14}},{"generated":{"line":48,"column":54},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":38,"column":2}},{"generated":{"line":49,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":2}},{"generated":{"line":49,"column":9},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":9}},{"generated":{"line":49,"column":59},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":31}},{"name":"start","generated":{"line":50,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":33}},{"name":"start","generated":{"line":50,"column":4},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":33}},{"generated":{"line":50,"column":9},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":31}},{"name":"end","generated":{"line":51,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":40}},{"name":"end","generated":{"line":51,"column":4},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":40}},{"generated":{"line":52,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":31}},{"generated":{"line":52,"column":3},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":9}},{"name":"options","generated":{"line":52,"column":5},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":47}},{"generated":{"line":52,"column":12},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":9}},{"generated":{"line":52,"column":13},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":39,"column":2}},{"generated":{"line":53,"column":0},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":40,"column":1}},{"generated":{"line":53,"column":2},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":42,"column":0}},{"name":"eachWeekendOfYear","generated":{"line":56,"column":33},"source":"node_modules/date-fns/eachWeekendOfYear.js","original":{"line":43,"column":15}}],"sources":{"node_modules/date-fns/eachWeekendOfYear.js":"import { eachWeekendOfInterval } from \"./eachWeekendOfInterval.js\";\nimport { endOfYear } from \"./endOfYear.js\";\nimport { startOfYear } from \"./startOfYear.js\";\n\n/**\n * The {@link eachWeekendOfYear} function options.\n */\n\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The given year\n * @param options - An object with options\n *\n * @returns An array containing all the Saturdays and Sundays\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * const result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\nexport function eachWeekendOfYear(date, options) {\n  const start = startOfYear(date, options);\n  const end = endOfYear(date, options);\n  return eachWeekendOfInterval({ start, end }, options);\n}\n\n// Fallback for modularized imports:\nexport default eachWeekendOfYear;\n"},"lineCount":null}},"error":null,"hash":"4005ad3f23e93de0e659824fda16b675","cacheData":{"env":{}}}