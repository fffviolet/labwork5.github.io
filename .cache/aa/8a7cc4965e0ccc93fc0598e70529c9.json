{"id":"node_modules/date-fns/addSeconds.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./addMilliseconds.js","loc":{"line":1,"column":32},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\addSeconds.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\addMilliseconds.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addSeconds = addSeconds;\nexports.default = void 0;\n\nvar _addMilliseconds = require(\"./addMilliseconds.js\");\n\n/**\n * The {@link addSeconds} function options.\n */\n\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of seconds to be added.\n * @param options - An object with options\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nfunction addSeconds(date, amount, options) {\n  return (0, _addMilliseconds.addMilliseconds)(date, amount * 1000, options);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = addSeconds;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/addSeconds.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/addSeconds.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/date-fns/addSeconds.js","original":{"line":7,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":7}},{"name":"addSeconds","generated":{"line":37,"column":9},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":16}},{"generated":{"line":37,"column":19},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":7}},{"name":"date","generated":{"line":37,"column":20},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":27}},{"generated":{"line":37,"column":24},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":7}},{"name":"amount","generated":{"line":37,"column":26},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":33}},{"generated":{"line":37,"column":32},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":7}},{"name":"options","generated":{"line":37,"column":34},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":41}},{"generated":{"line":37,"column":41},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":7}},{"generated":{"line":37,"column":43},"source":"node_modules/date-fns/addSeconds.js","original":{"line":29,"column":50}},{"generated":{"line":38,"column":0},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":2}},{"generated":{"line":38,"column":9},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":9}},{"name":"date","generated":{"line":38,"column":47},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":25}},{"generated":{"line":38,"column":51},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":9}},{"name":"amount","generated":{"line":38,"column":53},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":31}},{"generated":{"line":38,"column":59},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":37}},{"generated":{"line":38,"column":62},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":40}},{"generated":{"line":38,"column":66},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":9}},{"name":"options","generated":{"line":38,"column":68},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":46}},{"generated":{"line":38,"column":75},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":9}},{"generated":{"line":38,"column":76},"source":"node_modules/date-fns/addSeconds.js","original":{"line":30,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/date-fns/addSeconds.js","original":{"line":31,"column":1}},{"generated":{"line":39,"column":2},"source":"node_modules/date-fns/addSeconds.js","original":{"line":33,"column":0}},{"name":"addSeconds","generated":{"line":42,"column":33},"source":"node_modules/date-fns/addSeconds.js","original":{"line":34,"column":15}}],"sources":{"node_modules/date-fns/addSeconds.js":"import { addMilliseconds } from \"./addMilliseconds.js\";\n\n/**\n * The {@link addSeconds} function options.\n */\n\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of seconds to be added.\n * @param options - An object with options\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nexport function addSeconds(date, amount, options) {\n  return addMilliseconds(date, amount * 1000, options);\n}\n\n// Fallback for modularized imports:\nexport default addSeconds;\n"},"lineCount":null}},"error":null,"hash":"f0977d790056fb07b707dfcbef131497","cacheData":{"env":{}}}