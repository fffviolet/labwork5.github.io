{"id":"node_modules/date-fns/addWeeks.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./addDays.js","loc":{"line":1,"column":24},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\addWeeks.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\addDays.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addWeeks = addWeeks;\nexports.default = void 0;\n\nvar _addDays = require(\"./addDays.js\");\n\n/**\n * The {@link addWeeks} function options.\n */\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of weeks to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n * @param options - An object with options\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nfunction addWeeks(date, amount, options) {\n  return (0, _addDays.addDays)(date, amount * 7, options);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = addWeeks;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/addWeeks.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/addWeeks.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/date-fns/addWeeks.js","original":{"line":7,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":7}},{"name":"addWeeks","generated":{"line":37,"column":9},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":16}},{"generated":{"line":37,"column":17},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":7}},{"name":"date","generated":{"line":37,"column":18},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":25}},{"generated":{"line":37,"column":22},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":7}},{"name":"amount","generated":{"line":37,"column":24},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":31}},{"generated":{"line":37,"column":30},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":7}},{"name":"options","generated":{"line":37,"column":32},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":39}},{"generated":{"line":37,"column":39},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":7}},{"generated":{"line":37,"column":41},"source":"node_modules/date-fns/addWeeks.js","original":{"line":29,"column":48}},{"generated":{"line":38,"column":0},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":2}},{"generated":{"line":38,"column":9},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":9}},{"name":"date","generated":{"line":38,"column":31},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":17}},{"generated":{"line":38,"column":35},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":9}},{"name":"amount","generated":{"line":38,"column":37},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":23}},{"generated":{"line":38,"column":43},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":29}},{"generated":{"line":38,"column":46},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":32}},{"generated":{"line":38,"column":47},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":9}},{"name":"options","generated":{"line":38,"column":49},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":35}},{"generated":{"line":38,"column":56},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":9}},{"generated":{"line":38,"column":57},"source":"node_modules/date-fns/addWeeks.js","original":{"line":30,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/date-fns/addWeeks.js","original":{"line":31,"column":1}},{"generated":{"line":39,"column":2},"source":"node_modules/date-fns/addWeeks.js","original":{"line":33,"column":0}},{"name":"addWeeks","generated":{"line":42,"column":33},"source":"node_modules/date-fns/addWeeks.js","original":{"line":34,"column":15}}],"sources":{"node_modules/date-fns/addWeeks.js":"import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link addWeeks} function options.\n */\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of weeks to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n * @param options - An object with options\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount, options) {\n  return addDays(date, amount * 7, options);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n"},"lineCount":null}},"error":null,"hash":"058f61b4fc67ec829c70848d9c9a8e23","cacheData":{"env":{}}}