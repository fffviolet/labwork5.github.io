{"id":"node_modules/date-fns/formatDistanceToNowStrict.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./constructNow.js","loc":{"line":1,"column":29},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\formatDistanceToNowStrict.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\constructNow.js"},{"name":"./formatDistanceStrict.js","loc":{"line":3,"column":37},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\formatDistanceToNowStrict.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\formatDistanceStrict.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.formatDistanceToNowStrict = formatDistanceToNowStrict;\n\nvar _constructNow = require(\"./constructNow.js\");\n\nvar _formatDistanceStrict = require(\"./formatDistanceStrict.js\");\n\n/**\n * The {@link formatDistanceToNowStrict} function options.\n */\n\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nfunction formatDistanceToNowStrict(date, options) {\n  return (0, _formatDistanceStrict.formatDistanceStrict)(date, (0, _constructNow.constructNow)(date), options);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = formatDistanceToNowStrict;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":9,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":80,"column":7}},{"name":"formatDistanceToNowStrict","generated":{"line":88,"column":9},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":80,"column":16}},{"generated":{"line":88,"column":34},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":80,"column":7}},{"name":"date","generated":{"line":88,"column":35},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":80,"column":42}},{"generated":{"line":88,"column":39},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":80,"column":7}},{"name":"options","generated":{"line":88,"column":41},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":80,"column":48}},{"generated":{"line":88,"column":48},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":80,"column":7}},{"generated":{"line":88,"column":50},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":80,"column":57}},{"generated":{"line":89,"column":0},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":2}},{"generated":{"line":89,"column":9},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":9}},{"name":"date","generated":{"line":89,"column":57},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":30}},{"generated":{"line":89,"column":61},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":9}},{"generated":{"line":89,"column":63},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":36}},{"name":"date","generated":{"line":89,"column":95},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":49}},{"generated":{"line":89,"column":99},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":36}},{"generated":{"line":89,"column":100},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":9}},{"name":"options","generated":{"line":89,"column":102},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":56}},{"generated":{"line":89,"column":109},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":9}},{"generated":{"line":89,"column":110},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":81,"column":2}},{"generated":{"line":90,"column":0},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":82,"column":1}},{"generated":{"line":90,"column":2},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":84,"column":0}},{"name":"formatDistanceToNowStrict","generated":{"line":93,"column":33},"source":"node_modules/date-fns/formatDistanceToNowStrict.js","original":{"line":85,"column":15}}],"sources":{"node_modules/date-fns/formatDistanceToNowStrict.js":"import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistanceStrict } from \"./formatDistanceStrict.js\";\n\n/**\n * The {@link formatDistanceToNowStrict} function options.\n */\n\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nexport function formatDistanceToNowStrict(date, options) {\n  return formatDistanceStrict(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNowStrict;\n"},"lineCount":null}},"error":null,"hash":"3544bb963faa557bd36dd56e21ebe990","cacheData":{"env":{}}}