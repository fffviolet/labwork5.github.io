{"id":"node_modules/date-fns/previousSunday.js","dependencies":[{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\package.json","includedInParent":true,"mtime":1732207155873},{"name":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\package.json","includedInParent":true,"mtime":1732207154549},{"name":"./previousDay.js","loc":{"line":1,"column":28},"parent":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\previousSunday.js","resolved":"D:\\wulawula\\study\\three shang\\web网页设计\\实验\\5\\parcel-experiment\\node_modules\\date-fns\\previousDay.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.previousSunday = previousSunday;\n\nvar _previousDay = require(\"./previousDay.js\");\n\n/**\n * The {@link previousSunday} function options.\n */\n\n/**\n * @name previousSunday\n * @category Weekday Helpers\n * @summary When is the previous Sunday?\n *\n * @description\n * When is the previous Sunday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to start counting from\n * @param options - The options\n *\n * @returns The previous Sunday\n *\n * @example\n * // When is the previous Sunday before Jun, 21, 2021?\n * const result = previousSunday(new Date(2021, 5, 21))\n * //=> Sun June 20 2021 00:00:00\n */\nfunction previousSunday(date, options) {\n  return (0, _previousDay.previousDay)(date, 0, options);\n} // Fallback for modularized imports:\n\n\nvar _default = exports.default = previousSunday;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"node_modules/date-fns/previousSunday.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/date-fns/previousSunday.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/date-fns/previousSunday.js","original":{"line":7,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/date-fns/previousSunday.js","original":{"line":28,"column":7}},{"name":"previousSunday","generated":{"line":36,"column":9},"source":"node_modules/date-fns/previousSunday.js","original":{"line":28,"column":16}},{"generated":{"line":36,"column":23},"source":"node_modules/date-fns/previousSunday.js","original":{"line":28,"column":7}},{"name":"date","generated":{"line":36,"column":24},"source":"node_modules/date-fns/previousSunday.js","original":{"line":28,"column":31}},{"generated":{"line":36,"column":28},"source":"node_modules/date-fns/previousSunday.js","original":{"line":28,"column":7}},{"name":"options","generated":{"line":36,"column":30},"source":"node_modules/date-fns/previousSunday.js","original":{"line":28,"column":37}},{"generated":{"line":36,"column":37},"source":"node_modules/date-fns/previousSunday.js","original":{"line":28,"column":7}},{"generated":{"line":36,"column":39},"source":"node_modules/date-fns/previousSunday.js","original":{"line":28,"column":46}},{"generated":{"line":37,"column":0},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":2}},{"generated":{"line":37,"column":9},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":9}},{"name":"date","generated":{"line":37,"column":39},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":21}},{"generated":{"line":37,"column":43},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":9}},{"generated":{"line":37,"column":45},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":27}},{"generated":{"line":37,"column":46},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":9}},{"name":"options","generated":{"line":37,"column":48},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":30}},{"generated":{"line":37,"column":55},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":9}},{"generated":{"line":37,"column":56},"source":"node_modules/date-fns/previousSunday.js","original":{"line":29,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/date-fns/previousSunday.js","original":{"line":30,"column":1}},{"generated":{"line":38,"column":2},"source":"node_modules/date-fns/previousSunday.js","original":{"line":32,"column":0}},{"name":"previousSunday","generated":{"line":41,"column":33},"source":"node_modules/date-fns/previousSunday.js","original":{"line":33,"column":15}}],"sources":{"node_modules/date-fns/previousSunday.js":"import { previousDay } from \"./previousDay.js\";\n\n/**\n * The {@link previousSunday} function options.\n */\n\n/**\n * @name previousSunday\n * @category Weekday Helpers\n * @summary When is the previous Sunday?\n *\n * @description\n * When is the previous Sunday?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to start counting from\n * @param options - The options\n *\n * @returns The previous Sunday\n *\n * @example\n * // When is the previous Sunday before Jun, 21, 2021?\n * const result = previousSunday(new Date(2021, 5, 21))\n * //=> Sun June 20 2021 00:00:00\n */\nexport function previousSunday(date, options) {\n  return previousDay(date, 0, options);\n}\n\n// Fallback for modularized imports:\nexport default previousSunday;\n"},"lineCount":null}},"error":null,"hash":"a4238d09566e96af5040bea00f9fc103","cacheData":{"env":{}}}